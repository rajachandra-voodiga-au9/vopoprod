{"version":3,"sources":["actions/actionTypes.js","helpers/urls.js","helpers/utils.js","actions/posts.js","components/PostsList.js","actions/auth.js","actions/search.js","components/Navbar.js","components/Home.js","components/Page404.js","components/Login.js","components/Signup.js","components/Settings.js","actions/profile.js","actions/friends.js","components/UserProfile.js","components/FriendsList.js","components/FriendsListItem.js","components/CreatePost.js","components/Post.js","components/Comment.js","components/App.js","reducers/auth.js","reducers/profile.js","reducers/friends.js","reducers/search.js","reducers/index.js","reducers/posts.js","index.js","store/index.js"],"names":["UPDATE_POSTS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILED","AUTHENTICATE_USER","LOG_OUT","SIGNUP_START","SIGNUP_SUCCESS","SIGNUP_FAILED","CLEAR_AUTH_STATE","EDIT_USER_SUCCESSFUL","EDIT_USER_FAILED","USER_PROFILE_SUCCESS","USER_PROFILE_FAILURE","FETCH_USER_PROFILE","FETCH_FRIENDS_SUCCESS","ADD_FRIEND","REMOVE_FRIEND","ADD_POST","ADD_COMMENT","UPDATE_POST_LIKE","FETCH_SEARCH_RESULTS_SUCCESS","API_ROOT","APIUrls","page","limit","userId","id","likeType","searchText","getFormBody","params","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","getAuthTokenFromLocalStorage","localStorage","getItem","fetchPosts","dispatch","url","fetch","then","response","json","data","posts","console","log","type","createPost","content","method","headers","Authorization","body","post","success","createComment","postId","post_id","comment","addComment","addLike","addLikeToStore","PostsList","this","props","className","map","_id","Component","login","email","password","setItem","token","user","errorMessage","message","error","logoutUser","signup","confirmPassword","name","confirm_password","clearAuthState","editUser","repsonse","searchUsers","searchResultsSuccess","users","Navbar","logOut","removeItem","handleSearch","e","target","value","auth","results","to","src","alt","placeholder","onChange","length","isLoggedin","onClick","React","connect","state","search","Home","friends","Page404","Login","handleEmailChange","setState","handlePasswordChange","handleFormSubmit","preventDefault","inProgress","from","location","pathname","required","disabled","Signup","handleInputChange","field","onFormSubmit","Settings","handleChange","fieldName","val","handleSave","editMode","fetchUserProfile","fetchUserFriends","UserProfile","checkIfUserIsAFriend","match","friend","to_user","indexOf","handleAddFriendClick","a","options","successMessage","friendship","handleRemoveFriendClick","extra","prevProps","prevParams","currentParams","profile","isUserAFriend","FriendsList","FriendsListItem","CreatePost","handleOnClick","Post","handleAddComment","key","handleOnCommentChange","handlePostLike","isPostLikedByUser","likes","includes","comments","onKeyPress","Comment","PrivateRoute","privateRouteProps","path","component","render","App","jwtDecode","authenticateUser","exact","initialAuthState","initalProfileState","defaultProfileState","initialSearchState","combineReducers","action","newPosts","updatedPosts","concat","newArr","filter","store","createStore","reducer","applyMiddleware","thunk","logger","getState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dffc3cf3.chunk.js","sourcesContent":["export const UPDATE_POSTS = \"UPDATE_POSTS\";\r\n\r\n// login action types\r\nexport const LOGIN_START = \"LOGIN_START\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\r\n\r\nexport const AUTHENTICATE_USER = \"AUTHENTICATE_USER\";\r\nexport const LOG_OUT = \"LOG_OUT\";\r\n\r\n// signup\r\nexport const SIGNUP_START = \"SIGNUP_START\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAILED = \"SIGNUP_FAILED\";\r\nexport const CLEAR_AUTH_STATE = \"CLEAR_AUTH_STATE\";\r\n\r\nexport const EDIT_USER_SUCCESSFUL = \"EDIT_USER_SUCCESSFUL\";\r\nexport const EDIT_USER_FAILED = \"EDIT_USER_FAILED\";\r\n\r\nexport const USER_PROFILE_SUCCESS = \"USER_PROFILE_SUCCESS\";\r\nexport const USER_PROFILE_FAILURE = \"USER_PROFILE_FAILURE\";\r\nexport const FETCH_USER_PROFILE = \"FETCH_USER_PROFILE\";\r\n\r\n// friends\r\nexport const FETCH_FRIENDS_SUCCESS = \"FETCH_FRIENDS_SUCCESS\";\r\nexport const ADD_FRIEND = \"ADD_FRIEND\";\r\nexport const REMOVE_FRIEND = \"REMOVE_FRIEND\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const UPDATE_POST_LIKE = \"UPDATE_POST_LIKE\";\r\n\r\n// search\r\nexport const FETCH_SEARCH_RESULTS_SUCCESS = \"FETCH_SEARCH_RESULTS_SUCCESS\";\r\n","const API_ROOT = \"http://codeial.com:8000/api/v2\";\r\n\r\nexport const APIUrls = {\r\n  login: () => `${API_ROOT}/users/login`,\r\n  signup: () => `${API_ROOT}/users/signup`,\r\n  editProfile: () => `${API_ROOT}/users/edit`,\r\n  fetchPosts: (page = 1, limit = 25) =>\r\n    `${API_ROOT}/posts?page=${page}&limit=${limit}`,\r\n  userProfile: (userId) => `${API_ROOT}/users/${userId}`,\r\n  userFriends: () => `${API_ROOT}/friendship/fetch_user_friends`,\r\n  addFriend: (userId) =>\r\n    `${API_ROOT}/friendship/create_friendship?user_id=${userId}`,\r\n  removeFriend: (userId) =>\r\n    `${API_ROOT}/friendship/remove_friendship?user_id=${userId}`,\r\n  createPost: () => `${API_ROOT}/posts/create`,\r\n  createComment: () => `${API_ROOT}/comments/`,\r\n  toggleLike: (id, likeType) =>\r\n    `${API_ROOT}/likes/toggle?likeable_id=${id}&likeable_type=${likeType}`,\r\n  userSearch: (searchText) => `${API_ROOT}/users/search?text=${searchText}`,\r\n};\r\n","export function getFormBody(params) {\r\n  let formBody = [];\r\n\r\n  for (let property in params) {\r\n    let encodedKey = encodeURIComponent(property); // 'user name' => 'user%20name'\r\n    let encodedValue = encodeURIComponent(params[property]); // aakash 123 => aakash%2020123\r\n\r\n    formBody.push(encodedKey + \"=\" + encodedValue);\r\n  }\r\n\r\n  return formBody.join(\"&\"); // 'username=aakash&password=123213'\r\n}\r\n\r\nexport function getAuthTokenFromLocalStorage() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\n","import {\r\n  UPDATE_POSTS,\r\n  ADD_POST,\r\n  ADD_COMMENT,\r\n  UPDATE_POST_LIKE,\r\n} from \"./actionTypes\";\r\nimport { APIUrls } from \"../helpers/urls\";\r\nimport { getAuthTokenFromLocalStorage, getFormBody } from \"../helpers/utils\";\r\n\r\nexport function fetchPosts() {\r\n  return (dispatch) => {\r\n    const url = APIUrls.fetchPosts();\r\n    fetch(url)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        dispatch(updatePosts(data.data.posts));\r\n      });\r\n  };\r\n}\r\n\r\nexport function updatePosts(posts) {\r\n  return {\r\n    type: UPDATE_POSTS,\r\n    posts,\r\n  };\r\n}\r\n\r\nexport function addPost(post) {\r\n  return {\r\n    type: ADD_POST,\r\n    post,\r\n  };\r\n}\r\n\r\nexport function createPost(content) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.createPost();\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n      body: getFormBody({ content }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"dATA\", data);\r\n\r\n        if (data.success) {\r\n          dispatch(addPost(data.data.post));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function createComment(content, postId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.createComment();\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n      body: getFormBody({ content, post_id: postId }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          dispatch(addComment(data.data.comment, postId));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function addComment(comment, postId) {\r\n  return {\r\n    type: ADD_COMMENT,\r\n    comment,\r\n    postId,\r\n  };\r\n}\r\n\r\nexport function addLike(id, likeType, userId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.toggleLike(id, likeType);\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"LIKE DATA\", data);\r\n\r\n        if (data.success) {\r\n          dispatch(addLikeToStore(id, userId));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function addLikeToStore(postId, userId) {\r\n  return {\r\n    type: UPDATE_POST_LIKE,\r\n    postId,\r\n    userId,\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { CreatePost, Post } from \"./\";\r\n\r\nclass PostsList extends Component {\r\n  render() {\r\n    const { posts } = this.props;\r\n    return (\r\n      <div className=\"posts-list\">\r\n        <CreatePost />\r\n        {posts.map((post) => (\r\n          <Post post={post} key={post._id} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPostsList.propTypes = {\r\n  posts: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default PostsList;\r\n","import {\r\n  LOGIN_START,\r\n  LOGIN_FAILED,\r\n  LOGIN_SUCCESS,\r\n  AUTHENTICATE_USER,\r\n  LOG_OUT,\r\n  SIGNUP_START,\r\n  SIGNUP_FAILED,\r\n  SIGNUP_SUCCESS,\r\n  CLEAR_AUTH_STATE,\r\n  EDIT_USER_SUCCESSFUL,\r\n} from \"./actionTypes\";\r\nimport { APIUrls } from \"../helpers/urls\";\r\nimport { getFormBody, getAuthTokenFromLocalStorage } from \"../helpers/utils\";\r\n\r\nexport function startLogin() {\r\n  return {\r\n    type: LOGIN_START,\r\n  };\r\n}\r\nexport function loginFailed(errorMessage) {\r\n  return {\r\n    type: LOGIN_FAILED,\r\n    error: errorMessage,\r\n  };\r\n}\r\n\r\nexport function loginSuccess(user) {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function login(email, password) {\r\n  return (dispatch) => {\r\n    dispatch(startLogin());\r\n    const url = APIUrls.login();\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n      body: getFormBody({ email, password }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"data\", data);\r\n        if (data.success) {\r\n          // dispatch action to save user\r\n          localStorage.setItem(\"token\", data.data.token);\r\n          dispatch(loginSuccess(data.data.user));\r\n          return;\r\n        }\r\n        dispatch(loginFailed(data.message));\r\n      });\r\n  };\r\n}\r\n\r\nexport function authenticateUser(user) {\r\n  return {\r\n    type: AUTHENTICATE_USER,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function logoutUser() {\r\n  return {\r\n    type: LOG_OUT,\r\n  };\r\n}\r\n\r\nexport function signup(email, password, confirmPassword, name) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.signup();\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n      body: getFormBody({\r\n        email,\r\n        password,\r\n        confirm_password: confirmPassword,\r\n        name,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // console.log('data', data);\r\n        if (data.success) {\r\n          // do something\r\n          localStorage.setItem(\"token\", data.data.token);\r\n          dispatch(signupSuccessful(data.data.user));\r\n          return;\r\n        }\r\n        dispatch(signupFailed(data.message));\r\n      });\r\n  };\r\n}\r\n\r\nexport function startSingup() {\r\n  return {\r\n    type: SIGNUP_START,\r\n  };\r\n}\r\n\r\nexport function signupFailed(error) {\r\n  return {\r\n    type: SIGNUP_FAILED,\r\n    error,\r\n  };\r\n}\r\n\r\nexport function signupSuccessful(user) {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function clearAuthState() {\r\n  return {\r\n    type: CLEAR_AUTH_STATE,\r\n  };\r\n}\r\n\r\nexport function editUserSuccessful(user) {\r\n  return {\r\n    type: EDIT_USER_SUCCESSFUL,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function editUserFailed(error) {\r\n  return {\r\n    type: EDIT_USER_SUCCESSFUL,\r\n    error,\r\n  };\r\n}\r\n\r\nexport function editUser(name, password, confirmPassword, userId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.editProfile();\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n      body: getFormBody({\r\n        name,\r\n        password,\r\n        confirm_password: confirmPassword,\r\n        id: userId,\r\n      }),\r\n    })\r\n      .then((repsonse) => repsonse.json())\r\n      .then((data) => {\r\n        console.log(\"EDIT PROFIle data\", data);\r\n        if (data.success) {\r\n          dispatch(editUserSuccessful(data.data.user));\r\n\r\n          if (data.data.token) {\r\n            localStorage.setItem(\"token\", data.data.token);\r\n          }\r\n          return;\r\n        }\r\n\r\n        dispatch(editUserFailed(data.message));\r\n      });\r\n  };\r\n}\r\n","import { FETCH_SEARCH_RESULTS_SUCCESS } from \"./actionTypes\";\r\nimport { getAuthTokenFromLocalStorage } from \"../helpers/utils\";\r\nimport { APIUrls } from \"../helpers/urls\";\r\n\r\nexport function searchUsers(searchText) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.userSearch(searchText);\r\n\r\n    fetch(url, {\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    })\r\n      .then((repsonse) => repsonse.json())\r\n      .then((data) => {\r\n        console.log(\"SEARCH data\", data);\r\n        if (data.success) {\r\n          dispatch(searchResultsSuccess(data.data.users));\r\n        } else {\r\n          dispatch(searchResultsSuccess([]));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function searchResultsSuccess(users) {\r\n  return {\r\n    type: FETCH_SEARCH_RESULTS_SUCCESS,\r\n    users,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { logoutUser } from \"../actions/auth\";\r\nimport { searchUsers } from \"../actions/search\";\r\n\r\nclass Navbar extends React.Component {\r\n  logOut = () => {\r\n    localStorage.removeItem(\"token\");\r\n    this.props.dispatch(logoutUser());\r\n  };\r\n\r\n  handleSearch = (e) => {\r\n    const searchText = e.target.value;\r\n\r\n    this.props.dispatch(searchUsers(searchText));\r\n  };\r\n\r\n  render() {\r\n    const { auth, results } = this.props;\r\n    return (\r\n      <nav className=\"nav\">\r\n        <div className=\"left-div\">\r\n          <Link to=\"/\" className=\"brand-link\">\r\n            <h1 className=\"brand-name\">VOPO</h1>\r\n          </Link>\r\n        </div>\r\n        <div className=\"search-container\">\r\n          <img\r\n            className=\"search-icon\"\r\n            src=\"https://image.flaticon.com/icons/svg/483/483356.svg\"\r\n            alt=\"search-icon\"\r\n          />\r\n          <input placeholder=\"Search\" onChange={this.handleSearch} />\r\n\r\n          {results.length > 0 && (\r\n            <div className=\"search-results\">\r\n              <ul>\r\n                {results.map((user) => (\r\n                  <li className=\"search-results-row\" key={user._id}>\r\n                    <Link to={`/user/${user._id}`}>\r\n                      <img\r\n                        src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                        alt=\"user-dp\"\r\n                      />\r\n                      <span>{user.name}</span>\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"right-nav\">\r\n          {auth.isLoggedin && (\r\n            <div className=\"user\">\r\n              <Link to=\"/settings\">\r\n                <img\r\n                  src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                  alt=\"user-dp\"\r\n                  id=\"user-dp\"\r\n                />\r\n              </Link>\r\n              <span>{auth.user.name}</span>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"nav-links\">\r\n            <ul>\r\n              {!auth.isLoggedin && (\r\n                <li>\r\n                  <Link to=\"/login\">Log in</Link>\r\n                </li>\r\n              )}\r\n\r\n              {auth.isLoggedin && <li onClick={this.logOut}>Log out</li>}\r\n\r\n              {!auth.isLoggedin && (\r\n                <li>\r\n                  <Link to=\"/signup\">Register</Link>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n    results: state.search.results,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport { PostsList, FriendsList } from \"./\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    const { posts, friends, isLoggedin } = this.props;\r\n    return (\r\n      <div className=\"home\">\r\n        <PostsList posts={posts} />\r\n        {isLoggedin && <FriendsList friends={friends} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction Page404(props) {\r\n  return (\r\n    <div>\r\n      <h1>404: Nothing found here!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page404;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { login, clearAuthState } from \"../actions/auth\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.emailInputRef = React.createRef();\r\n    // this.passwordInputRef = React.createRef();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearAuthState());\r\n  }\r\n\r\n  handleEmailChange = (e) => {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  };\r\n\r\n  handlePasswordChange = (e) => {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log('this.emailInputRef', this.emailInputRef);\r\n    // console.log('this.passwordInputRef', this.passwordInputRef);\r\n    console.log(\"this.state\", this.state);\r\n    const { email, password } = this.state;\r\n\r\n    if (email && password) {\r\n      this.props.dispatch(login(email, password));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { error, inProgress, isLoggedin } = this.props.auth;\r\n    const { from } = this.props.location.state || { from: { pathname: \"/\" } };\r\n\r\n    if (isLoggedin) {\r\n      return <Redirect to={from} />;\r\n    }\r\n    return (\r\n      <form className=\"login-form\">\r\n        <span className=\"login-signup-header\">Log In</span>\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            // ref={this.emailInputRef}\r\n            onChange={this.handleEmailChange}\r\n            value={this.state.email}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            // ref={this.passwordInputRef}\r\n            onChange={this.handlePasswordChange}\r\n            value={this.state.password}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          {inProgress ? (\r\n            <button onClick={this.handleFormSubmit} disabled={inProgress}>\r\n              Logging in...\r\n            </button>\r\n          ) : (\r\n            <button onClick={this.handleFormSubmit} disabled={inProgress}>\r\n              Log In\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Login);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { startSingup, signup, clearAuthState } from \"../actions/auth\";\r\n\r\nclass Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      name: \"\",\r\n      confirmPassword: \"\",\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearAuthState());\r\n  }\r\n\r\n  handleInputChange = (field, value) => {\r\n    this.setState({\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password, confirmPassword, name } = this.state;\r\n\r\n    if (email && password && confirmPassword && name) {\r\n      this.props.dispatch(startSingup());\r\n      this.props.dispatch(signup(email, password, confirmPassword, name));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { inProgress, error, isLoggedin } = this.props.auth;\r\n\r\n    if (isLoggedin) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <form className=\"login-form\">\r\n        <span className=\"login-signup-header\"> Signup</span>\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        <div className=\"field\">\r\n          <input\r\n            placeholder=\"Name\"\r\n            type=\"text\"\r\n            required\r\n            onChange={(e) => this.handleInputChange(\"name\", e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            required\r\n            onChange={(e) => this.handleInputChange(\"email\", e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            placeholder=\"Confirm password\"\r\n            type=\"password\"\r\n            required\r\n            onChange={(e) =>\r\n              this.handleInputChange(\"confirmPassword\", e.target.value)\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            required\r\n            onChange={(e) => this.handleInputChange(\"password\", e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <button onClick={this.onFormSubmit} disabled={inProgress}>\r\n            Signup\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Signup);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { editUser, clearAuthState } from \"../actions/auth\";\r\n\r\nclass Settings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: props.auth.user.name,\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      editMode: false,\r\n    };\r\n  }\r\n\r\n  handleChange = (fieldName, val) => {\r\n    this.setState({\r\n      [fieldName]: val,\r\n    });\r\n  };\r\n\r\n  handleSave = () => {\r\n    const { password, confirmPassword, name } = this.state;\r\n    const { user } = this.props.auth;\r\n\r\n    this.props.dispatch(editUser(name, password, confirmPassword, user._id));\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearAuthState());\r\n  }\r\n  render() {\r\n    const { user, error } = this.props.auth;\r\n    const { editMode } = this.state;\r\n    return (\r\n      <div className=\"settings\">\r\n        <div className=\"img-container\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n            alt=\"user-dp\"\r\n          />\r\n        </div>\r\n\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        {error === false && (\r\n          <div className=\"alert success-dailog\">\r\n            Successfully updated profile!\r\n          </div>\r\n        )}\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Email</div>\r\n          <div className=\"field-value\">{user.email}</div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Name</div>\r\n          {editMode ? (\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => this.handleChange(\"name\", e.target.value)}\r\n              value={this.state.name}\r\n            />\r\n          ) : (\r\n            <div className=\"field-value\">{user.name}</div>\r\n          )}\r\n        </div>\r\n\r\n        {editMode && (\r\n          <div className=\"field\">\r\n            <div className=\"field-label\">New password</div>\r\n\r\n            <input\r\n              type=\"password\"\r\n              onChange={(e) => this.handleChange(\"password\", e.target.value)}\r\n              value={this.state.password}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {editMode && (\r\n          <div className=\"field\">\r\n            <div className=\"field-label\">Confirm password</div>\r\n\r\n            <input\r\n              type=\"password\"\r\n              onChange={(e) =>\r\n                this.handleChange(\"confirmPassword\", e.target.value)\r\n              }\r\n              value={this.state.confirmPassword}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"btn-grp\">\r\n          {editMode ? (\r\n            <button className=\"button save-btn\" onClick={this.handleSave}>\r\n              Save\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"button edit-btn\"\r\n              onClick={() => this.handleChange(\"editMode\", true)}\r\n            >\r\n              Edit profile\r\n            </button>\r\n          )}\r\n\r\n          {editMode && (\r\n            <div\r\n              className=\"go-back\"\r\n              onClick={() => this.handleChange(\"editMode\", false)}\r\n            >\r\n              Go back\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ auth }) {\r\n  return {\r\n    auth,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Settings);\r\n","import {\r\n  USER_PROFILE_SUCCESS,\r\n  USER_PROFILE_FAILURE,\r\n  FETCH_USER_PROFILE,\r\n} from \"./actionTypes\";\r\nimport { APIUrls } from \"../helpers/urls\";\r\nimport { getAuthTokenFromLocalStorage } from \"../helpers/utils\";\r\n\r\nexport function startUserProfileFetch() {\r\n  return {\r\n    type: FETCH_USER_PROFILE,\r\n  };\r\n}\r\n\r\nexport function userProfileSuccess(user) {\r\n  return {\r\n    type: USER_PROFILE_SUCCESS,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function userProfileFailed(error) {\r\n  return {\r\n    type: USER_PROFILE_FAILURE,\r\n    error,\r\n  };\r\n}\r\n\r\nexport function fetchUserProfile(userId) {\r\n  return (dispatch) => {\r\n    dispatch(startUserProfileFetch());\r\n\r\n    const url = APIUrls.userProfile(userId);\r\n    fetch(url, {\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        dispatch(userProfileSuccess(data.data.user));\r\n      });\r\n  };\r\n}\r\n","import { APIUrls } from \"../helpers/urls\";\r\nimport { getAuthTokenFromLocalStorage } from \"../helpers/utils\";\r\nimport {\r\n  FETCH_FRIENDS_SUCCESS,\r\n  ADD_FRIEND,\r\n  REMOVE_FRIEND,\r\n} from \"./actionTypes\";\r\n\r\nexport function fetchUserFriends(userId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.userFriends(userId);\r\n    fetch(url, {\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"data\", data);\r\n        dispatch(fetchFriendsSucces(data.data.friends));\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchFriendsSucces(friends) {\r\n  return {\r\n    type: FETCH_FRIENDS_SUCCESS,\r\n    friends,\r\n  };\r\n}\r\n\r\nexport function addFriend(friend) {\r\n  return {\r\n    type: ADD_FRIEND,\r\n    friend,\r\n  };\r\n}\r\n\r\nexport function removeFriend(userId) {\r\n  return {\r\n    type: REMOVE_FRIEND,\r\n    userId,\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUserProfile } from \"../actions/profile\";\r\nimport { APIUrls } from \"../helpers/urls\";\r\nimport { getAuthTokenFromLocalStorage } from \"../helpers/utils\";\r\nimport { addFriend, removeFriend } from \"../actions/friends\";\r\n\r\nclass UserProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      success: null,\r\n      error: null,\r\n      successMessage: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { match } = this.props;\r\n\r\n    if (match.params.userId) {\r\n      // dispatch an action\r\n      this.props.dispatch(fetchUserProfile(match.params.userId));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      match: { params: prevParams },\r\n    } = prevProps;\r\n\r\n    const {\r\n      match: { params: currentParams },\r\n    } = this.props;\r\n\r\n    if (\r\n      prevParams &&\r\n      currentParams &&\r\n      prevParams.userId !== currentParams.userId\r\n    ) {\r\n      this.props.dispatch(fetchUserProfile(currentParams.userId));\r\n    }\r\n  }\r\n\r\n  checkIfUserIsAFriend = () => {\r\n    console.log(\"this.props\", this.props);\r\n    const { match, friends } = this.props;\r\n    const userId = match.params.userId;\r\n\r\n    const index = friends.map((friend) => friend.to_user._id).indexOf(userId);\r\n\r\n    if (index !== -1) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  handleAddFriendClick = async () => {\r\n    const userId = this.props.match.params.userId;\r\n    const url = APIUrls.addFriend(userId);\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    };\r\n\r\n    const response = await fetch(url, options);\r\n    const data = await response.json();\r\n\r\n    if (data.success) {\r\n      this.setState({\r\n        success: true,\r\n        successMessage: \"Added friend successfully!\",\r\n      });\r\n\r\n      this.props.dispatch(addFriend(data.data.friendship));\r\n    } else {\r\n      this.setState({\r\n        success: null,\r\n        error: data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleRemoveFriendClick = async () => {\r\n    // Mini Assignment\r\n    const { match } = this.props;\r\n    const url = APIUrls.removeFriend(match.params.userId);\r\n\r\n    const extra = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\r\n      },\r\n    };\r\n\r\n    const response = await fetch(url, extra);\r\n    const data = await response.json();\r\n    console.log(\"await data\", data);\r\n\r\n    if (data.success) {\r\n      // show user message\r\n      this.setState({\r\n        success: true,\r\n        successMessage: \"Removed friends successfully!\",\r\n      });\r\n      this.props.dispatch(removeFriend(match.params.userId));\r\n    } else {\r\n      this.setState({\r\n        success: null,\r\n        error: data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      match: { params },\r\n      profile,\r\n    } = this.props;\r\n    console.log(\"this.props\", params);\r\n    const user = profile.user;\r\n\r\n    if (profile.inProgress) {\r\n      return <h1>Loading!</h1>;\r\n    }\r\n\r\n    const isUserAFriend = this.checkIfUserIsAFriend();\r\n    const { success, error, successMessage } = this.state;\r\n    return (\r\n      <div className=\"settings\">\r\n        <div className=\"img-container\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n            alt=\"user-dp\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Name</div>\r\n          <div className=\"field-value\">{user.name}</div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Email</div>\r\n          <div className=\"field-value\">{user.email}</div>\r\n        </div>\r\n\r\n        <div className=\"btn-grp\">\r\n          {!isUserAFriend ? (\r\n            <button\r\n              className=\"button save-btn\"\r\n              onClick={this.handleAddFriendClick}\r\n            >\r\n              Add Friend\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"button save-btn\"\r\n              onClick={this.handleRemoveFriendClick}\r\n            >\r\n              Remove Friend\r\n            </button>\r\n          )}\r\n\r\n          {success && (\r\n            <div className=\"alert success-dailog\">{successMessage}</div>\r\n          )}\r\n          {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ profile, friends }) {\r\n  return {\r\n    profile,\r\n    friends,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(UserProfile);\r\n","import React from \"react\";\r\nimport { FriendsListItem } from \"./\";\r\n\r\nconst FriendsList = (props) => {\r\n  return (\r\n    <div className=\"friends-list\">\r\n      <div className=\"header\">Friends</div>\r\n\r\n      {props.friends && props.friends.length === 0 && (\r\n        <div className=\"no-friends\">No friends found!</div>\r\n      )}\r\n\r\n      {props.friends &&\r\n        props.friends.map((friend) => (\r\n          <FriendsListItem friend={friend.to_user} key={friend._id} />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendsList;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction FriendsListItem(props) {\r\n  return (\r\n    <div>\r\n      <Link className=\"friends-item\" to={`user/${props.friend._id}`}>\r\n        <div className=\"friends-img\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n            alt=\"user-pic\"\r\n          />\r\n        </div>\r\n        <div className=\"friends-name\">{props.friend.email}</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendsListItem;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createPost } from \"../actions/posts\";\r\n\r\nclass CreatePost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      content: \"\",\r\n    };\r\n  }\r\n\r\n  handleOnClick = () => {\r\n    // dispatch action\r\n    this.props.dispatch(createPost(this.state.content));\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      content: e.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"create-post\">\r\n        <textarea\r\n          className=\"add-post\"\r\n          value={this.state.content}\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <div>\r\n          <button id=\"add-post-btn\" onClick={this.handleOnClick}>\r\n            Add Post\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(CreatePost);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Comment } from \"./\";\r\nimport { createComment, addLike } from \"../actions/posts\";\r\n\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      comment: \"\",\r\n    };\r\n  }\r\n  handleAddComment = (e) => {\r\n    const { comment } = this.state;\r\n    const { post } = this.props;\r\n\r\n    if (e.key === \"Enter\") {\r\n      this.props.dispatch(createComment(comment, post._id));\r\n\r\n      // clear comment\r\n      this.setState({\r\n        comment: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOnCommentChange = (e) => {\r\n    this.setState({\r\n      comment: e.target.value,\r\n    });\r\n  };\r\n\r\n  handlePostLike = () => {\r\n    const { post, user } = this.props;\r\n    this.props.dispatch(addLike(post._id, \"Post\", user._id));\r\n  };\r\n  render() {\r\n    const { post, user } = this.props;\r\n    const { comment } = this.state;\r\n\r\n    const isPostLikedByUser = post.likes.includes(user._id);\r\n\r\n    return (\r\n      <div className=\"post-wrapper\" key={post._id}>\r\n        <div className=\"post-header\">\r\n          <div className=\"post-avatar\">\r\n            <Link to={`/user/${post.user._id}`}>\r\n              <img\r\n                src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                alt=\"user-pic\"\r\n              />\r\n            </Link>\r\n            <div>\r\n              <span className=\"post-author\">{post.user.name}</span>\r\n              <span className=\"post-time\">a minute ago</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"post-content\">{post.content}</div>\r\n\r\n          <div className=\"post-actions\">\r\n            <button className=\"post-like no-btn\" onClick={this.handlePostLike}>\r\n              {isPostLikedByUser ? (\r\n                <img\r\n                  src=\"https://image.flaticon.com/icons/svg/1076/1076984.svg\"\r\n                  alt=\"like post\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src=\"https://image.flaticon.com/icons/svg/1077/1077035.svg\"\r\n                  alt=\"likes-icon\"\r\n                />\r\n              )}\r\n              <span>{post.likes.length}</span>\r\n            </button>\r\n\r\n            <div className=\"post-comments-icon\">\r\n              <img\r\n                src=\"https://image.flaticon.com/icons/svg/1380/1380338.svg\"\r\n                alt=\"comments-icon\"\r\n              />\r\n              <span>{post.comments.length}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"post-comment-box\">\r\n            <input\r\n              placeholder=\"Start typing a comment\"\r\n              onChange={this.handleOnCommentChange}\r\n              onKeyPress={this.handleAddComment}\r\n              value={comment}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"post-comments-list\">\r\n            {post.comments.map((comment) => (\r\n              <Comment comment={comment} key={comment._id} postId={post._id} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction mapStateToProps({ auth }) {\r\n  return {\r\n    user: auth.user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Post);\r\n","import React from \"react\";\r\n\r\nfunction Comment({ comment }) {\r\n  return (\r\n    <div className=\"post-comment-item\">\r\n      <div className=\"post-comment-header\">\r\n        <span className=\"post-comment-author\">{comment.user.name}</span>\r\n        <span className=\"post-comment-time\">a minute ago</span>\r\n        <span className=\"post-comment-likes\">{comment.likes.length} likes</span>\r\n      </div>\r\n\r\n      <div className=\"post-comment-content\">{comment.content}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { fetchPosts } from \"../actions/posts\";\nimport {\n  Home,\n  Navbar,\n  Page404,\n  Login,\n  Signup,\n  Settings,\n  UserProfile,\n} from \"./\";\nimport jwtDecode from \"jwt-decode\";\nimport { authenticateUser } from \"../actions/auth\";\nimport { getAuthTokenFromLocalStorage } from \"../helpers/utils\";\nimport { fetchUserFriends } from \"../actions/friends\";\n\nconst PrivateRoute = (privateRouteProps) => {\n  const { isLoggedin, path, component: Component } = privateRouteProps;\n\n  return (\n    <Route\n      path={path}\n      render={(props) => {\n        console.log(\"props\", props);\n        console.log(\"isLoggedin\", isLoggedin);\n        return isLoggedin ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: {\n                from: props.location,\n              },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchPosts());\n\n    const token = getAuthTokenFromLocalStorage();\n\n    if (token) {\n      const user = jwtDecode(token);\n\n      console.log(\"user\", user);\n      this.props.dispatch(\n        authenticateUser({\n          email: user.email,\n          _id: user._id,\n          name: user.name,\n        })\n      );\n\n      this.props.dispatch(fetchUserFriends());\n    }\n  }\n\n  render() {\n    const { posts, auth, friends } = this.props;\n    return (\n      <Router>\n        <div>\n          <Navbar />\n\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => {\n                return (\n                  <Home\n                    {...props}\n                    posts={posts}\n                    friends={friends}\n                    isLoggedin={auth.isLoggedin}\n                  />\n                );\n              }}\n            />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Signup} />\n            <PrivateRoute\n              path=\"/settings\"\n              component={Settings}\n              isLoggedin={auth.isLoggedin}\n            />\n            <PrivateRoute\n              path=\"/user/:userId\"\n              component={UserProfile}\n              isLoggedin={auth.isLoggedin}\n            />\n            <Route component={Page404} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.posts,\n    auth: state.auth,\n    friends: state.friends,\n  };\n}\n\nApp.propTypes = {\n  posts: PropTypes.array.isRequired,\n};\n\nexport default connect(mapStateToProps)(App);\n","import {\r\n  LOGIN_START,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  AUTHENTICATE_USER,\r\n  LOG_OUT,\r\n  SIGNUP_START,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAILED,\r\n  CLEAR_AUTH_STATE,\r\n  EDIT_USER_SUCCESSFUL,\r\n  EDIT_USER_FAILED,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialAuthState = {\r\n  user: {},\r\n  error: null,\r\n  isLoggedin: false,\r\n  inProgress: false,\r\n};\r\n\r\nexport default function auth(state = initialAuthState, action) {\r\n  switch (action.type) {\r\n    case CLEAR_AUTH_STATE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case LOGIN_START:\r\n    case SIGNUP_START:\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n    case SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        isLoggedin: true,\r\n        inProgress: false,\r\n        error: null,\r\n      };\r\n    case LOGIN_FAILED:\r\n    case SIGNUP_FAILED:\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    case AUTHENTICATE_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        isLoggedin: true,\r\n      };\r\n    case LOG_OUT:\r\n      return {\r\n        ...state,\r\n        user: {},\r\n        isLoggedin: false,\r\n      };\r\n    case EDIT_USER_SUCCESSFUL:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        error: false,\r\n      };\r\n    case EDIT_USER_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  USER_PROFILE_SUCCESS,\r\n  USER_PROFILE_FAILURE,\r\n  FETCH_USER_PROFILE,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initalProfileState = {\r\n  user: {},\r\n  error: null,\r\n  success: null,\r\n  inProgress: false,\r\n};\r\nexport default function profile(state = initalProfileState, action) {\r\n  switch (action.type) {\r\n    case USER_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        user: action.user,\r\n        inProgress: false,\r\n      };\r\n    case USER_PROFILE_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        inProgress: false,\r\n      };\r\n    case FETCH_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_FRIENDS_SUCCESS,\r\n  ADD_FRIEND,\r\n  REMOVE_FRIEND,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst defaultProfileState = [];\r\n\r\n// profile reducer\r\nexport default function friends(state = defaultProfileState, action) {\r\n  switch (action.type) {\r\n    case FETCH_FRIENDS_SUCCESS:\r\n      return [...action.friends];\r\n    case ADD_FRIEND:\r\n      return state.concat(action.friend);\r\n    case REMOVE_FRIEND:\r\n      const newArr = state.filter(\r\n        (friend) => friend.to_user._id !== action.userId\r\n      );\r\n      return newArr;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FETCH_SEARCH_RESULTS_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialSearchState = {\r\n  results: [],\r\n};\r\n\r\nexport default function search(state = initialSearchState, action) {\r\n  switch (action.type) {\r\n    case FETCH_SEARCH_RESULTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        results: action.users,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport posts from \"./posts\";\r\nimport auth from \"./auth\";\r\nimport profile from \"./profile\";\r\nimport friends from \"./friends\";\r\nimport search from \"./search\";\r\n\r\nexport default combineReducers({\r\n  posts,\r\n  auth,\r\n  profile,\r\n  friends,\r\n  search,\r\n});\r\n","import {\r\n  UPDATE_POSTS,\r\n  ADD_POST,\r\n  ADD_COMMENT,\r\n  UPDATE_POST_LIKE,\r\n} from \"../actions/actionTypes\";\r\n\r\nexport default function posts(state = [], action) {\r\n  switch (action.type) {\r\n    case UPDATE_POSTS:\r\n      return action.posts;\r\n    case ADD_POST:\r\n      return [action.post, ...state];\r\n    case ADD_COMMENT:\r\n      const newPosts = state.map((post) => {\r\n        if (post._id === action.postId) {\r\n          return {\r\n            ...post,\r\n            comments: [action.comment, ...post.comments],\r\n          };\r\n        }\r\n\r\n        return post;\r\n      });\r\n      return newPosts;\r\n    case UPDATE_POST_LIKE:\r\n      const updatedPosts = state.map((post) => {\r\n        if (post._id === action.postId) {\r\n          return {\r\n            ...post,\r\n            likes: [...post.likes, action.userId],\r\n          };\r\n        }\r\n\r\n        return post;\r\n      });\r\n      return updatedPosts;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { configureStore } from \"./store\";\nimport { Provider } from \"react-redux\";\nconst store = configureStore();\nconsole.log(`store: `, store.getState());\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport reducer from \"../reducers\";\r\nlet store;\r\n\r\nexport function configureStore() {\r\n  store = createStore(reducer, applyMiddleware(thunk, logger));\r\n\r\n  return store;\r\n}\r\n"],"sourceRoot":""}